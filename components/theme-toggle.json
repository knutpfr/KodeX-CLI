{
  "title": "Theme Toggle",
  "description": "Dark/Light Mode Toggle mit localStorage",
  "type": "js",
  "group": "utilities",
  "content": "// Theme Toggle Funktionalit√§t\nclass ThemeToggle {\n  constructor() {\n    this.theme = localStorage.getItem('theme') || 'light';\n    this.init();\n  }\n\n  init() {\n    // Theme anwenden\n    document.documentElement.setAttribute('data-theme', this.theme);\n    \n    // Toggle Button erstellen\n    this.createToggleButton();\n    \n    // Event Listener\n    this.bindEvents();\n  }\n\n  createToggleButton() {\n    const button = document.createElement('button');\n    button.id = 'theme-toggle';\n    button.innerHTML = this.theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';\n    button.setAttribute('aria-label', 'Theme wechseln');\n    \n    // Button zu Body hinzuf√ºgen\n    document.body.appendChild(button);\n  }\n\n  bindEvents() {\n    const button = document.getElementById('theme-toggle');\n    button.addEventListener('click', () => this.toggleTheme());\n  }\n\n  toggleTheme() {\n    this.theme = this.theme === 'light' ? 'dark' : 'light';\n    \n    // DOM aktualisieren\n    document.documentElement.setAttribute('data-theme', this.theme);\n    document.getElementById('theme-toggle').innerHTML = this.theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';\n    \n    // In localStorage speichern\n    localStorage.setItem('theme', this.theme);\n    \n    // Custom Event feuern\n    document.dispatchEvent(new CustomEvent('themeChanged', {\n      detail: { theme: this.theme }\n    }));\n  }\n}\n\n// Initialisierung\nconst themeToggle = new ThemeToggle();"
}