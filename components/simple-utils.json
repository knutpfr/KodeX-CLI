{
  "title": "Simple Utils",
  "description": "Nützliche JavaScript Hilfsfunktionen",
  "type": "js",
  "content": "// Nützliche JavaScript Utilities\n\n// Debounce Funktion - verhindert zu häufige Ausführung\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Throttle Funktion - begrenzt Ausführungsrate\nfunction throttle(func, limit) {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n// Element sichtbar prüfen\nfunction isElementVisible(element) {\n  const rect = element.getBoundingClientRect();\n  return rect.top >= 0 && rect.left >= 0 && \n         rect.bottom <= window.innerHeight && \n         rect.right <= window.innerWidth;\n}\n\n// Smooth Scroll zu Element\nfunction scrollToElement(selector) {\n  const element = document.querySelector(selector);\n  if (element) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n}\n\n// Verwendungsbeispiele:\n// const debouncedSearch = debounce(searchFunction, 300);\n// const throttledScroll = throttle(onScrollFunction, 100);\n// scrollToElement('#section1');"
}